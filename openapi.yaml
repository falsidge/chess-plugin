openapi: 3.0.1
info:
  title: TODO Plugin
  description: A plugin that allows the user to create and manage a TODO list using ChatGPT. If you do not know the user's username, ask them first before making queries to the plugin. Otherwise, use the username "global".
  version: 'v1'
servers:
  - url: http://localhost:5003
paths:

  /chess/analysis:
    post:
      operationId: analyzeBoardFEN
      summary: Analyze a board with the board in FEN
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fenBoard'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud-eval'
  /chess/display:
    post:
      operationId: renderBoard
      summary: Renders the board given FEN in ASCII or PNG
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fenBoard'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/displayBoard'
  /chess/analysis/{username}:
    get:
      operationId: analyzeBoard
      summary: Analyze the current user's board
      parameters:
      - in: path
        name: username
        schema:
            type: string
        required: true
        description: The name of the user.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud-eval'
  /chess/board/{username}:
    post:
      operationId: load_board
      summary: Load board into user to play chess
      parameters:
      - in: path
        name: username
        schema:
            type: string
        required: true
        description: The name of the user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fenBoard'
      responses:
        "200":
          description: OK
    get:
      operationId: get_board
      summary: Get the current chess board
      parameters:
      - in: path
        name: username
        schema:
            type: string
        required: true
        description: The name of the user.

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fenBoard'
  /chess/display/{username}:
    get:
      operationId: renderBoardUser
      summary: Renders the board with the board of the current user using ASCII art or SVG Image url.
      parameters:
      - in: path
        name: username
        schema:
            type: string
        required: true
        description: The name of the user.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/displayBoard'                
  /chess/make_move/{username}:
    post:
      operationId: make_move
      summary: Make a move in the current user's chessboard
      parameters:
      - in: path
        name: username
        schema:
            type: string
        required: true
        description: The name of the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/moveRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fenBoard'
        "400":
          description: Invalid move
  /chess/valid_moves/{username}:
    get:
      operationId: get_valid_moves
      summary: Get valid moves for current user's board
      parameters:
      - in: path
        name: username
        schema:
            type: string
        required: true
        description: The name of the user.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/valid_moveResponse'      

components:
  schemas:
    cloud-eval:
      type: object
      properties:
        pvs:
          type: array
          items:
            type: object
            properties:
              moves:
                type: string
                description: Move in FEN format
              cp: 
                type: number
                description: Evaluation score
          description: List of positions for chess move
    fenBoard:
      type: object
      required:
      - fen
      properties:
        fen:
          type: string
          description: The board in FEN  
          required: true
    displayBoard:
      type: object
      properties:
        display:
          type: object
          properties:
            png:
              type: string
              description: The board displayed in PNG
            ascii:
              type: string
              description: The board displayed in ASCII
    moveRequest:
      type: object
      properties:
        move:
          type: string
          description: A chess move
    valid_movesResponse:
      type: object
      properties:
        moves:
          type: array
          items:
            type: object
            properties:
              moves:
                type: string
                description: Chess move
